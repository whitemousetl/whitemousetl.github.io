<?xml version='1.0' encoding='UTF-8'?>
<rss xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/" version="2.0"><channel><title>WhiteMouseTL</title><link>https://whitemousetl.github.io/</link><description>知人者智，自知者明。胜人者有力，自胜者强。</description><copyright>WhiteMouseTL</copyright><docs>http://www.rssboard.org/rss-specification</docs><generator>python-feedgen</generator><image><url>https://avatars.githubusercontent.com/u/67313669?v=4</url><title>avatar</title><link>https://whitemousetl.github.io/</link></image><lastBuildDate>Sun, 14 Apr 2024 16:34:56 +0000</lastBuildDate><managingEditor>WhiteMouseTL</managingEditor><ttl>60</ttl><webMaster>WhiteMouseTL</webMaster><item><title>Linux-下载命令</title><link>https://whitemousetl.github.io//post/Linux--xia-zai-ming-ling.html</link><description>centOS系统使用yum命令&#13;
语法：**yum [-y] [install remove search] 软件名称**&#13;
选项[-y] 自动确认，无需手动确认安装或卸载过程&#13;
install：安装&#13;
remove：卸载&#13;
search：搜索&#13;
yum需要root权限或使用sudo &#13;
yum需要联网&#13;
&#13;
ubuntu系统使用apt命令，其他与centOS系统基本一样&#13;
&#13;
。</description><guid isPermaLink="true">https://whitemousetl.github.io//post/Linux--xia-zai-ming-ling.html</guid><pubDate>Sun, 14 Apr 2024 16:34:34 +0000</pubDate></item><item><title>Linux-修改权限控制chmod、修改所属用户、用户组chown</title><link>https://whitemousetl.github.io//post/Linux--xiu-gai-quan-xian-kong-zhi-chmod%E3%80%81-xiu-gai-suo-shu-yong-hu-%E3%80%81-yong-hu-zu-chown.html</link><description>可以使用chmod命令，修改文件、文件夹的权限信息&#13;
注意：只有文件、文件夹的所属用户或root用户可以修改&#13;
语法：**chmod [-R] 权限 文件或文件夹**&#13;
选项 [-R] ，对文件夹内的全部内容应用同样的操作&#13;
chmod u=rwx,g=rx,o=x hello.txt &#13;
chmod -R u=rwx，g=rx，o=x test&#13;
&#13;
u=rwx,g=rx,o=x 这部分可以用751代替&#13;
也就是chmod 751 hello.txt&#13;
---是0，rwx是7，其他可推导出来&#13;
&#13;
使用chown命令，可以修改文件、文件夹的所属用户和用户组，此命令只能root用户使用&#13;
语法：**chown [-R] [用户] [ : ] [用户组] 文件或文件夹**&#13;
选项[-R] ,同chmod，对文件夹内全部内容应用相同规则&#13;
选项用户 ，修改所属用户&#13;
选项用户组，修改所属用户组&#13;
选项[ : ]用于分隔用户和用户组&#13;
chown root hello.txt 将hello.txt所属用户修改为root&#13;
chown ：root hello.txt 将hello.txt 用户组修改为root&#13;
chown root：whitemousetl 将hello.txt用户改为root，用户组改为whitemousetl&#13;
chown -R root test。</description><guid isPermaLink="true">https://whitemousetl.github.io//post/Linux--xiu-gai-quan-xian-kong-zhi-chmod%E3%80%81-xiu-gai-suo-shu-yong-hu-%E3%80%81-yong-hu-zu-chown.html</guid><pubDate>Sun, 14 Apr 2024 16:32:23 +0000</pubDate></item><item><title>Linux-查看权限控制</title><link>https://whitemousetl.github.io//post/Linux--cha-kan-quan-xian-kong-zhi.html</link><description>通过命令ls -l可以以列表形式查看内容，并显示权限细节&#13;
drwxr-xr-x. 2 whitemousetl whitemousetl  6 3月  10 08:08 Desktop&#13;
drwxr-xr-x 表示文件或文件夹的权限控制信息&#13;
第一个whitemousetl 表示文件、文件夹所属用户&#13;
第二个whitemousetl  表示文件、文件夹所属用户组&#13;
&#13;
权限控制信息总共10个槽位&#13;
![image](https://github.com/whitemousetl/whitemousetl.github.io/assets/67313669/5928fbd7-4fe2-40f6-a34b-1748ce32ac03)&#13;
&#13;
r是读权限&#13;
w是写权限&#13;
x是执行权限&#13;
第1位可以是 - 或 l 或 d ，-表示文件，d表示文件夹，l表示软连接&#13;
第2、3、4位表示所属用户权限，可以是 - 或 r 或 w 或 x ，-表示无，r是读，w是写，x是执行&#13;
第5、6、7位表示所属用户组权限，其他与第2、3、4位相同&#13;
第8、9、10位表示其他用户权限，其他与第2、3、4位相同&#13;
&#13;
r对于文件是可以查看文件内容，对于文件夹是可以查看文件夹内容，比如ls命令&#13;
w对于文件是可以修改此文件内容，对于文件夹是可以在文件夹内创建、删除、改名等操作&#13;
x对于文件是可以将文件作为程序执行，对于文件夹可以更改目录到此文件夹，即cd操作。</description><guid isPermaLink="true">https://whitemousetl.github.io//post/Linux--cha-kan-quan-xian-kong-zhi.html</guid><pubDate>Sun, 14 Apr 2024 16:31:32 +0000</pubDate></item><item><title>Linux-用户、用户组、getent</title><link>https://whitemousetl.github.io//post/Linux--yong-hu-%E3%80%81-yong-hu-zu-%E3%80%81getent.html</link><description>Linux可以配置多个用户、配置多个用户组、用户可以加入多个用户组中&#13;
&#13;
Linux系统中关于权限管控级别有2个级别，分别是：&#13;
针对用户的权限控制&#13;
针对用户组的权限控制&#13;
&#13;
以下命令需要root用户执行&#13;
**创建用户组 groupadd 用户组名**&#13;
**删除用户组 groupdel 用户组名**&#13;
&#13;
以下命令需要root用户执行&#13;
添加用户&#13;
**创建用户 useradd [-g -d] 用户名**&#13;
选项[-g] 指定用户的组，不指定[-g] ，会创建同名组并自动加入，指定[-g]需要组已经存在，如已经存在同名组，必须使用[-g]&#13;
选项[-d] [-d]指定用户Home路径，不指定，Home目录默认在/home/用户名&#13;
&#13;
以下命令需要root用户执行&#13;
删除用户&#13;
**userdel [-r] 用户名**&#13;
选项 [-r] 删除用户的Home目录，删除用户时不使用[-r]，Home目录保留&#13;
&#13;
以下命令需要root用户执行&#13;
查看用户组&#13;
**id [用户名]**&#13;
参数用户名，被查看的用户，不提供则查看自身&#13;
&#13;
以下命令需要root用户执行&#13;
修改用户所属组&#13;
**usermod -aG 用户组 用户名，指定用户加入指定用户组**&#13;
&#13;
使用getent passwd命令可以查看当前系统中有哪些用户&#13;
**语法：getent passwd**passwd是Linux密码&#13;
共有7份信息：&#13;
用户名：whitemousetl:&#13;
密码（x）：x:&#13;
用户ID：1000:&#13;
组ID：1000:&#13;
描述信息（无用）：whitemousetl:&#13;
Home目录：/home/whitemousetl:&#13;
执行终端（默认bash）/bin/bash&#13;
&#13;
使用getent group命令可以查看当前系统中有哪些用户组&#13;
**语法：getent group**&#13;
有3份信息：&#13;
组名称：test4:&#13;
组认证（显示为x）：x:&#13;
组ID 1003:&#13;
&#13;
&#13;
。</description><guid isPermaLink="true">https://whitemousetl.github.io//post/Linux--yong-hu-%E3%80%81-yong-hu-zu-%E3%80%81getent.html</guid><pubDate>Sun, 14 Apr 2024 16:30:12 +0000</pubDate></item><item><title>Linux-用户权限（su与sudo）</title><link>https://whitemousetl.github.io//post/Linux--yong-hu-quan-xian-%EF%BC%88su-yu-sudo%EF%BC%89.html</link><description>在Linux系统中，拥有最大权限的账户名是root（超级管理员）&#13;
&#13;
root用户拥有最大的系统操作权限，而普通用户在很多地方的权限是受限的&#13;
普通用户在Home目录内是不受限的，出了Home目录，用户仅有只读和执行权限，无修改权限&#13;
&#13;
通过su命令切换账户，来自英文switch user&#13;
&#13;
**语法：su [-] 用户名**&#13;
[-] 可选，表示是否在切换用户后加载环境变量，建议带上&#13;
参数用户名，表示要切换的用户，用户名也可以省略，省略表示切换到root&#13;
切换用户后，通过exit命令退回上一个用户，也可以使用快捷键Ctor + D&#13;
&#13;
不建议长期使用root用户，避免带来系统损坏&#13;
&#13;
可以使用sudo命令，为普通用户的命令授权，临时以root 身份执行&#13;
**语法：sudo 其他命令**&#13;
在其他命令之前，带上sudo，即可为这一条命令临时赋予root权限&#13;
但并不是所有用户都有权利使用sudo，需要为普通用户配置sudo认证&#13;
&#13;
**为普通用户配置sudo认证**&#13;
切换到root用户，执行visudo，会自动通过vi编辑器打开/etc/sudoers&#13;
在文件最后添加：用户名 ALL=（ALL）  NOPASSWORD：ALL&#13;
最后通过wq保存退出 。</description><guid isPermaLink="true">https://whitemousetl.github.io//post/Linux--yong-hu-quan-xian-%EF%BC%88su-yu-sudo%EF%BC%89.html</guid><pubDate>Sun, 14 Apr 2024 16:25:33 +0000</pubDate></item><item><title>Linux-vi/vim编辑器</title><link>https://whitemousetl.github.io//post/Linux-vi-vim-bian-ji-qi.html</link><description>**vi/vim是visual interface 的简称，是Linux中最经典的文本编辑器**&#13;
vim是vi的加强版本，兼容vi所有指令，不经能编辑文本，而且还具有shell程序编辑的功能，有不同颜色的字体来辨别语法的正确性，极大方便了程序的设计和编辑性&#13;
&#13;
vi/vim的三种模式&#13;
**1、命令模式（Command mode）&#13;
命令模式下，所敲的按键编辑器都理解为命令，以命令驱动执行不同的功能。</description><guid isPermaLink="true">https://whitemousetl.github.io//post/Linux-vi-vim-bian-ji-qi.html</guid><pubDate>Sun, 14 Apr 2024 16:22:21 +0000</pubDate></item><item><title>Linux-echo、tail、反引号 ` 和重定向符</title><link>https://whitemousetl.github.io//post/Linux-echo%E3%80%81tail%E3%80%81-fan-yin-hao-%20%60%20-he-zhong-ding-xiang-fu.html</link><description>echo命令可以在命令行输出指定内容&#13;
语法：**echo 输出内容**&#13;
无需选项，只有一个参数，表示要输出的内容，内容用""包围起来&#13;
&#13;
![echo](https://github.com/whitemousetl/whitemousetl.github.io/assets/67313669/3c1cb60e-6f1d-4fa4-8fcf-93f79e5cd9a8)&#13;
&#13;
**反引号（飘号）`**&#13;
被 ` 包围的内容，会被作为命令执行，而非普通字符&#13;
&#13;
**重定向符 &gt; 和 &gt;&gt;**&#13;
&gt; ，将左侧命令的输出结果，覆盖写入到符号右侧指定的文件中&#13;
&gt;&gt; ，将左侧命令的输出结果，追加写入到符号右侧指定的文件中&#13;
![追加覆盖](https://github.com/whitemousetl/whitemousetl.github.io/assets/67313669/54724248-e25e-49cf-893a-9767d25c27e4)&#13;
&#13;
tail命令，可以查看文件尾部内容，跟踪文件的最新更改&#13;
**语法：tail [-f -num] Linux路径**&#13;
参数 Linux路径，表示被跟踪的文件路径&#13;
选项[-f] 表示持续跟踪&#13;
选项[-num] 表示查看尾部多少行，不填默认10行&#13;
[-f] 持续追踪表示当尾部更新时，命令行会实时跟新&#13;
![tail](https://github.com/whitemousetl/whitemousetl.github.io/assets/67313669/5a0a41b7-b4cc-4cae-afd7-8db739ab6d28)&#13;
。</description><guid isPermaLink="true">https://whitemousetl.github.io//post/Linux-echo%E3%80%81tail%E3%80%81-fan-yin-hao-%20%60%20-he-zhong-ding-xiang-fu.html</guid><pubDate>Sun, 14 Apr 2024 16:18:18 +0000</pubDate></item><item><title>Linux-grep、wc、|（过滤、统计行数单词量、管道符）</title><link>https://whitemousetl.github.io//post/Linux-grep%E3%80%81wc%E3%80%81-%EF%BC%88-guo-lv-%E3%80%81-tong-ji-xing-shu-dan-ci-liang-%E3%80%81-guan-dao-fu-%EF%BC%89.html</link><description>通过grep命令，从文件中根据关键字过滤文件行&#13;
&#13;
**语法：grep [-n] 关键字 文件路径**&#13;
&#13;
[-n] 可选，表示在选项中显示匹配的行的行号&#13;
**参数关键字 必填**，表示过滤的关键字，带有空格或其他特殊符号的关键字，建议用""将其包围起来&#13;
**参数文件路径 必填**，表示要过滤内容的文件路径，可作为内容输出端口&#13;
&#13;
![grep](https://github.com/whitemousetl/whitemousetl.github.io/assets/67313669/4fab4f06-078c-4772-8fe2-1ee2d29e8fca)&#13;
&#13;
通过wc命令统计文件的行数、单词量等&#13;
**语法：wc [-c -m -l -w] 文件路径**&#13;
选项 [-c] ，统计byte的数量&#13;
选项[-m] ，统计字符数量&#13;
选项[-l] ，统计行数&#13;
选项[-w] ，统计单词量&#13;
参数文件路径，被统计的文件，可作为内容输入端口&#13;
&#13;
![wc](https://github.com/whitemousetl/whitemousetl.github.io/assets/67313669/93194f23-2a90-4f8e-9583-0e8e97e74e16)&#13;
&#13;
管道符 | 将管道符左边命令输出的结果，作为右边命令的输入，是对输出结果的过滤&#13;
如：cat test.txt | grep "哈"&#13;
管道符可以嵌套使用，只要有输出结果，就可使用管道符&#13;
![管道符](https://github.com/whitemousetl/whitemousetl.github.io/assets/67313669/f3217e9c-a909-4a1b-9afb-2f4891306aa6)&#13;
&#13;
。</description><guid isPermaLink="true">https://whitemousetl.github.io//post/Linux-grep%E3%80%81wc%E3%80%81-%EF%BC%88-guo-lv-%E3%80%81-tong-ji-xing-shu-dan-ci-liang-%E3%80%81-guan-dao-fu-%EF%BC%89.html</guid><pubDate>Sun, 14 Apr 2024 16:06:01 +0000</pubDate></item><item><title>Linux-which、find命令（查找命令所在的目录、按条件查找文件/文件夹[find命令查找的内容最好用”“包围]）</title><link>https://whitemousetl.github.io//post/Linux-which%E3%80%81find-ming-ling-%EF%BC%88-cha-zhao-ming-ling-suo-zai-de-mu-lu-%E3%80%81-an-tiao-jian-cha-zhao-wen-jian---wen-jian-jia-%5Bfind-ming-ling-cha-zhao-de-nei-rong-zui-hao-yong-%E2%80%9D%E2%80%9C-bao-wei-%5D%EF%BC%89.html</link><description>**which 要查找的命令**&#13;
&#13;
- **whicht 命令本身必填**&#13;
- **要查找的命令 参数 必填**&#13;
&#13;
![which](https://github.com/whitemousetl/whitemousetl.github.io/assets/67313669/0505bdb4-d834-48db-b88a-941ad20f817e)&#13;
&#13;
**find命令用来搜索指定文件**&#13;
1、**按文件吗搜索**&#13;
语法：**find 起始路径 -name "被检查的文件名"**&#13;
可以使用通配符 * ，使用通配符时会把文件和文件夹都搜索出来&#13;
&#13;
![find](https://github.com/whitemousetl/whitemousetl.github.io/assets/67313669/7b9bfbdf-b0df-4e49-825a-b504098937d9)&#13;
&#13;
**按照文件大小搜索**&#13;
语法：**find 起始路径 -size + | -n [kMG]**&#13;
+、- 表示大于和小于&#13;
kMG表示大小单位，k（小写字母）表示kb，M表示Mb，G表示Gb&#13;
如：find / -size -10k&#13;
        find / -size +100M&#13;
        find / -size +1G&#13;
&#13;
![find1](https://github.com/whitemousetl/whitemousetl.github.io/assets/67313669/88985daf-4a5b-4420-8461-61981efcf4a0)&#13;
&#13;
&#13;
。</description><guid isPermaLink="true">https://whitemousetl.github.io//post/Linux-which%E3%80%81find-ming-ling-%EF%BC%88-cha-zhao-ming-ling-suo-zai-de-mu-lu-%E3%80%81-an-tiao-jian-cha-zhao-wen-jian---wen-jian-jia-%5Bfind-ming-ling-cha-zhao-de-nei-rong-zui-hao-yong-%E2%80%9D%E2%80%9C-bao-wei-%5D%EF%BC%89.html</guid><pubDate>Sun, 14 Apr 2024 13:12:25 +0000</pubDate></item><item><title>Linux-cp、mv、rm（复制命令、移动命令、删除命令）</title><link>https://whitemousetl.github.io//post/Linux-cp%E3%80%81mv%E3%80%81rm%EF%BC%88-fu-zhi-ming-ling-%E3%80%81-yi-dong-ming-ling-%E3%80%81-shan-chu-ming-ling-%EF%BC%89.html</link><description>cp命令可以用来复制文件/文件夹，来自copy&#13;
&#13;
**cp [-r] 文件/文件夹 文件夹**&#13;
&#13;
- cp **命令本身，必填**，表示复制&#13;
- [-r] **可选项，非必填**，用于复制目录及其所有的子目录和文件，如果要复制目录，需要使用该选项。</description><guid isPermaLink="true">https://whitemousetl.github.io//post/Linux-cp%E3%80%81mv%E3%80%81rm%EF%BC%88-fu-zhi-ming-ling-%E3%80%81-yi-dong-ming-ling-%E3%80%81-shan-chu-ming-ling-%EF%BC%89.html</guid><pubDate>Sun, 14 Apr 2024 12:51:33 +0000</pubDate></item><item><title>Linux-touch、cat、more（创建文件、查看文件内容、分页查看文件内容）</title><link>https://whitemousetl.github.io//post/Linux-touch%E3%80%81cat%E3%80%81more%EF%BC%88-chuang-jian-wen-jian-%E3%80%81-cha-kan-wen-jian-nei-rong-%E3%80%81-fen-ye-cha-kan-wen-jian-nei-rong-%EF%BC%89.html</link><description>**touch Linux文件**&#13;
&#13;
- touch **命令本身，必填**&#13;
- Linux文件 **参数，必填**，表示在当前目录下创建文件&#13;
&#13;
![touch](https://github.com/whitemousetl/whitemousetl.github.io/assets/67313669/359cd580-0a62-4aeb-a89c-4f0b2dd24704)&#13;
&#13;
**cat Linux文件**&#13;
&#13;
cat **命令本身，必填**&#13;
Linux文件 **参数，必填**，表示在当前目录下查看文件&#13;
&#13;
![cat](https://github.com/whitemousetl/whitemousetl.github.io/assets/67313669/0a5775ff-77ec-4e01-855c-cc628ae868d3)&#13;
&#13;
cat命令是查看文件所有内容，有时候文件内容太多，可以使用more命令来一页一页地查看&#13;
&#13;
**more Linux文件**&#13;
&#13;
- more **命令本身，必填**&#13;
- Linux文件 **参数，必填**，表示在当前目录下分页查看文件&#13;
&#13;
![more1](https://github.com/whitemousetl/whitemousetl.github.io/assets/67313669/af4204c6-c836-45a3-adf9-19f8f5f3aab5)&#13;
![more2](https://github.com/whitemousetl/whitemousetl.github.io/assets/67313669/c013114c-09ba-4446-a061-e15a3c4e846c)&#13;
&#13;
。</description><guid isPermaLink="true">https://whitemousetl.github.io//post/Linux-touch%E3%80%81cat%E3%80%81more%EF%BC%88-chuang-jian-wen-jian-%E3%80%81-cha-kan-wen-jian-nei-rong-%E3%80%81-fen-ye-cha-kan-wen-jian-nei-rong-%EF%BC%89.html</guid><pubDate>Sun, 14 Apr 2024 12:21:16 +0000</pubDate></item><item><title>Linux-mkdir创建新目录（文件夹）</title><link>https://whitemousetl.github.io//post/Linux-mkdir-chuang-jian-xin-mu-lu-%EF%BC%88-wen-jian-jia-%EF%BC%89.html</link><description>mkdir [-p] Linux路径&#13;
mkdir来自make directory 创建目录，用来**创建新目录**&#13;
注意:创建新文件夹需要修改权限，如果还不会修改权限，那么可以在Home目录下操作，因为涉及到权限问题，Home目录外无法成功创建新目录&#13;
&#13;
- mkdir 命令本身，必填&#13;
- [-p] 可选项 ，非必填，表示自动创建不存在的父目录，适用于创建连续多层的目录&#13;
- Linux路径 参数，必填，创建目录必须要指定目录路径&#13;
![mkdir](https://github.com/whitemousetl/whitemousetl.github.io/assets/67313669/4f666872-9eae-4662-9423-7e503ff475aa)&#13;
。</description><guid isPermaLink="true">https://whitemousetl.github.io//post/Linux-mkdir-chuang-jian-xin-mu-lu-%EF%BC%88-wen-jian-jia-%EF%BC%89.html</guid><pubDate>Sun, 14 Apr 2024 11:56:18 +0000</pubDate></item><item><title>Linux-绝对路径、相对路径、特殊路径符</title><link>https://whitemousetl.github.io//post/Linux--jue-dui-lu-jing-%E3%80%81-xiang-dui-lu-jing-%E3%80%81-te-shu-lu-jing-fu.html</link><description>绝对路径：以根目录为起点，描述路径的一种写法，路径描述以/开头&#13;
相对路径：以当前目录为起点，描述路径的一种写法，路径描述无需以/开头&#13;
![绝对相对路径](https://github.com/whitemousetl/whitemousetl.github.io/assets/67313669/ac4c40e6-3c22-42ab-a5e7-b5078576cd63)&#13;
特殊路径符号&#13;
. 表示当前目录，比如cd ./Desktop表示切换到当前目录下的Desktop目录内，和cd Desktop效果一致&#13;
![特殊路径符1](https://github.com/whitemousetl/whitemousetl.github.io/assets/67313669/6dcfe28a-eedf-47d4-937c-e7b0b2991c4f)&#13;
&#13;
.. 表示上一级目录，比如cd ../ 即可切换到上一级目录，cd ../../ 表示切换到上二级目录&#13;
![特殊路径符2](https://github.com/whitemousetl/whitemousetl.github.io/assets/67313669/536b937c-37dd-4d05-a700-892ae30fbc34)&#13;
&#13;
~ 表示Home目录，比如cd ~ 即可切换到Home目录，cd ~/Desktop 表示切换到Home内的Desktop目录&#13;
![特殊路径符3](https://github.com/whitemousetl/whitemousetl.github.io/assets/67313669/96f3758a-4952-4fe8-bf48-631420699c21)&#13;
。</description><guid isPermaLink="true">https://whitemousetl.github.io//post/Linux--jue-dui-lu-jing-%E3%80%81-xiang-dui-lu-jing-%E3%80%81-te-shu-lu-jing-fu.html</guid><pubDate>Sun, 14 Apr 2024 11:44:41 +0000</pubDate></item><item><title>Linux-cd命令和pwd命令</title><link>https://whitemousetl.github.io//post/Linux-cd-ming-ling-he-pwd-ming-ling.html</link><description>cd命令来自Change Directory，改变目录&#13;
&#13;
- cd命令无需可选项，只有参数，表示要切换到哪个目录下&#13;
- cd命令直接执行，不写参数，表示回到用户的Home目录&#13;
&#13;
![cd](https://github.com/whitemousetl/whitemousetl.github.io/assets/67313669/0830dbb8-da50-49d6-b503-18a5d0c616ee)&#13;
&#13;
pwd命令，来自print work directory，输出当前工作目录&#13;
pwd命令无参数，无可选项，直接输入pwd即可&#13;
![pwd](https://github.com/whitemousetl/whitemousetl.github.io/assets/67313669/83e17b90-1a5f-411b-b9a8-2c93e342ada3)&#13;
&#13;
。</description><guid isPermaLink="true">https://whitemousetl.github.io//post/Linux-cd-ming-ling-he-pwd-ming-ling.html</guid><pubDate>Sun, 14 Apr 2024 07:21:59 +0000</pubDate></item><item><title>Linux-目录结构和命令格式</title><link>https://whitemousetl.github.io//post/Linux--mu-lu-jie-gou-he-ming-ling-ge-shi.html</link><description>## **Linux目录结构**&#13;
Windows系统的目录结构可以有多个**盘符**，如C盘、D盘、E盘等。</description><guid isPermaLink="true">https://whitemousetl.github.io//post/Linux--mu-lu-jie-gou-he-ming-ling-ge-shi.html</guid><pubDate>Sun, 14 Apr 2024 07:06:01 +0000</pubDate></item><item><title>WPF-样式的基本使用</title><link>https://whitemousetl.github.io//post/WPF--yang-shi-de-ji-ben-shi-yong.html</link><description>在 WPF (Windows Presentation Foundation) 中，控件属性是定义用户界面元素的各个方面的属性，例如其外观、行为或内容。</description><guid isPermaLink="true">https://whitemousetl.github.io//post/WPF--yang-shi-de-ji-ben-shi-yong.html</guid><pubDate>Sun, 31 Mar 2024 11:15:24 +0000</pubDate></item><item><title>WPF-把背景颜色设置为渐变色</title><link>https://whitemousetl.github.io//post/WPF--ba-bei-jing-yan-se-she-zhi-wei-jian-bian-se.html</link><description>把背景色设置为渐变色的效果有两种。</description><guid isPermaLink="true">https://whitemousetl.github.io//post/WPF--ba-bei-jing-yan-se-she-zhi-wei-jian-bian-se.html</guid><pubDate>Sat, 30 Mar 2024 19:34:47 +0000</pubDate></item><item><title>WPF-隐藏头部</title><link>https://whitemousetl.github.io//post/WPF--yin-cang-tou-bu.html</link><description>WPF可以把默认自带的头部给隐藏掉，不隐藏的时候是这样的&#13;
&lt;img src="https://github.com/whitemousetl/whitemousetl.github.io/assets/67313669/de4eafac-62a7-45b2-8cf3-6a791c7fb329" alt="wpf自带头部" width="200"&gt;&#13;
&#13;
隐藏使用代码：&#13;
```&#13;
&lt;WindowChrome.WindowChrome&gt;&#13;
    &lt;WindowChrome GlassFrameThickness="0"/&gt;&#13;
&lt;/WindowChrome.WindowChrome&gt;&#13;
```&#13;
&lt;img src="https://github.com/whitemousetl/whitemousetl.github.io/assets/67313669/b6ca1027-06bf-49db-9c24-e0a016b2c57a" alt="隐藏头部的代码" width="400" &gt;&#13;
&#13;
隐藏后的效果：&#13;
&#13;
&lt;img src="https://github.com/whitemousetl/whitemousetl.github.io/assets/67313669/6f29af14-37cc-49bb-877f-488501c7fdf3" alt="wpf隐藏头部后" width="400"&gt;&#13;
&#13;
为什么要隐藏头部？&#13;
因为wpf自带的头部样式不好看，需要改动的时候不如直接把这个头部隐藏掉，就可以像写UI一样直接自定义头部。</description><guid isPermaLink="true">https://whitemousetl.github.io//post/WPF--yin-cang-tou-bu.html</guid><pubDate>Sat, 30 Mar 2024 18:13:41 +0000</pubDate></item></channel></rss>